# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Plan
  displayName: 'Terraform Init and Plan'
  jobs:
    - job: TerraformInitPlan
      steps:
        - task: TerraformInstaller@1
          displayName: 'Install Terraform'
          inputs:
            terraformVersion: 'latest'
        - task: AzureCLI@2
          displayName: 'Terraform Init'
          inputs:
            azureSubscription: 'ADO'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              terraform init
        - task: AzureCLI@2
          displayName: 'Terraform Plan'
          inputs:
            azureSubscription: 'ADO'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              terraform plan

- stage: Approval
  displayName: 'Manual Approval'
  dependsOn: Plan
  jobs:
    - deployment: WaitForApproval
      displayName: 'Approval Before Apply'
      environment: 'Approvals'
      strategy:
        runOnce:
          deploy:
            steps:
              - script: echo "Waiting for approval before proceeding to Terraform Apply"
                displayName: 'Approval Step'

- stage: Apply
  displayName: 'Terraform Apply'
  dependsOn: Approval
  jobs:
    - job: TerraformApply
      steps:
        - task: TerraformInstaller@1
          displayName: 'Install Terraform'
          inputs:
            terraformVersion: 'latest'
        - task: AzureCLI@2
          displayName: 'Terraform Apply'
          inputs:
            azureSubscription: 'ADO'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              terraform apply -auto-approve
